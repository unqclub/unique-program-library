{
  "version": "0.1.0",
  "name": "chain_traits",
  "instructions": [
    {
      "name": "CreateTraitConfig",
      "accounts": [
        {
          "name": "collection",
          "isMut": false,
          "isSigner": false,
          "desc": "Collection or first creator of collection"
        },
        {
          "name": "traitConfigAccount",
          "isMut": true,
          "isSigner": false,
          "desc": "Account used for storing trait config on-chain"
        },
        {
          "name": "updateAuthority",
          "isMut": false,
          "isSigner": true,
          "desc": "Signer of transaction(update authority of collection)"
        },
        {
          "name": "collectionMetadata",
          "isMut": false,
          "isSigner": false,
          "desc": "Metadata account of collection NFT or NFT from collection"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "vec": {
              "defined": "CreateTraitConfigArgs"
            }
          }
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 0
      }
    },
    {
      "name": "CreateTrait",
      "accounts": [
        {
          "name": "traitConfigAccount",
          "isMut": false,
          "isSigner": false,
          "desc": "Account used for storing trait config on-chain"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "Signer of transaction (update authority or holder in case of mint)"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "instructionSysvar",
          "isMut": false,
          "isSigner": false,
          "desc": "Sysvar defining instruction of same transaction",
          "optional": true
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "vec": {
              "vec": {
                "defined": "CreateTraitArgs"
              }
            }
          }
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 1
      }
    }
  ],
  "accounts": [
    {
      "name": "TraitConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "collection",
            "type": "publicKey"
          },
          {
            "name": "updateAuthoirty",
            "type": "publicKey"
          },
          {
            "name": "lastModified",
            "type": "i64"
          },
          {
            "name": "availableTraits",
            "type": {
              "hashMap": [
                "string",
                {
                  "vec": {
                    "defined": "AvailableTrait"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "TraitData",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "traitConfig",
            "type": "publicKey"
          },
          {
            "name": "nftMint",
            "type": "publicKey"
          },
          {
            "name": "lastModified",
            "type": "i64"
          },
          {
            "name": "traits",
            "type": {
              "hashMap": [
                "string",
                "string"
              ]
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "CreateTraitConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "values",
            "type": {
              "vec": "string"
            }
          },
          {
            "name": "action",
            "type": {
              "defined": "TraitAction"
            }
          }
        ]
      }
    },
    {
      "name": "CreateTraitArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "AvailableTrait",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "value",
            "type": "string"
          },
          {
            "name": "isActive",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "TraitAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Add"
          },
          {
            "name": "Remove"
          },
          {
            "name": "Modify"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 0,
      "name": "InvalidCollection",
      "msg": "Metadata is not related to provided collection"
    },
    {
      "code": 1,
      "name": "NotUpdateAuthority",
      "msg": "Signer is not update authority of collection"
    },
    {
      "code": 2,
      "name": "TraitConfigNotInitialized",
      "msg": "Trait config not initialized"
    },
    {
      "code": 3,
      "name": "WrongAuthorityToCreateTrait",
      "msg": "You don't have authority to store traits on chain!"
    },
    {
      "code": 4,
      "name": "TraitDoesNotExist",
      "msg": "Trait does not exist in trait config"
    },
    {
      "code": 5,
      "name": "InvalidAccountSeeds",
      "msg": "Invalid account seeds"
    }
  ],
  "metadata": {
    "origin": "shank",
    "address": "EVYWVskBg3xFwL3Px5FvGY3iC3kR4n4Mo9AA8kpTk1JB",
    "binaryVersion": "0.0.12",
    "libVersion": "0.0.12"
  }
}